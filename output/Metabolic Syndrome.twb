<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0909.1159                               -->
<workbook original-version='18.1' source-build='2023.2.2 (20232.23.0909.1159)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <SavingAnalyticObjects />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column alias='Blood Glucose' caption='Choose Dimension' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;BloodGlucose&quot;'>
        <calculation class='tableau' formula='&quot;BloodGlucose&quot;' />
        <aliases>
          <alias key='&quot;Age&quot;' value='Age' />
          <alias key='&quot;BloodGlucose&quot;' value='Blood Glucose' />
          <alias key='&quot;UrAlbCr&quot;' value='Albumin Creatinine Ratio (Urine)' />
          <alias key='&quot;UricAcid&quot;' value='Uric Acid' />
          <alias key='&quot;WaistCirc&quot;' value='Waist Circumference' />
        </aliases>
        <members>
          <member alias='Age' value='&quot;Age&quot;' />
          <member value='&quot;Income&quot;' />
          <member alias='Waist Circumference' value='&quot;WaistCirc&quot;' />
          <member value='&quot;BMI&quot;' />
          <member value='&quot;Albuminuria&quot;' />
          <member alias='Albumin Creatinine Ratio (Urine)' value='&quot;UrAlbCr&quot;' />
          <member alias='Uric Acid' value='&quot;UricAcid&quot;' />
          <member alias='Blood Glucose' value='&quot;BloodGlucose&quot;' />
          <member value='&quot;HDL&quot;' />
          <member value='&quot;Triglycerides&quot;' />
        </members>
      </column>
      <column alias='Waist Circumference' caption='Choose X' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;WaistCirc&quot;'>
        <calculation class='tableau' formula='&quot;WaistCirc&quot;' />
        <aliases>
          <alias key='&quot;BloodGlucose&quot;' value='Blood Glucose' />
          <alias key='&quot;UrAlbCr&quot;' value='Albumin Creatinine Ratio (Urine)' />
          <alias key='&quot;UricAcid&quot;' value='Uric Acid' />
          <alias key='&quot;WaistCirc&quot;' value='Waist Circumference' />
        </aliases>
        <members>
          <member value='&quot;Age&quot;' />
          <member value='&quot;Income&quot;' />
          <member alias='Waist Circumference' value='&quot;WaistCirc&quot;' />
          <member value='&quot;BMI&quot;' />
          <member value='&quot;Albuminuria&quot;' />
          <member alias='Albumin Creatinine Ratio (Urine)' value='&quot;UrAlbCr&quot;' />
          <member alias='Uric Acid' value='&quot;UricAcid&quot;' />
          <member alias='Blood Glucose' value='&quot;BloodGlucose&quot;' />
          <member value='&quot;HDL&quot;' />
          <member value='&quot;Triglycerides&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='df_impute' inline='true' name='federated.0qxsfro1i5vo0q17e8ygw1in8stm' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df_impute' name='textscan.097sybi1m46hho19gvf3z0idnue5'>
            <connection class='textscan' directory='C:/Users/raref/Lighthouse/Lighthouse-Midterm-Project/notebook/data' filename='df_impute.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.097sybi1m46hho19gvf3z0idnue5' name='df_impute.csv' table='[df_impute#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='seqn' ordinal='1' />
            <column datatype='integer' name='Age' ordinal='2' />
            <column datatype='string' name='Sex' ordinal='3' />
            <column datatype='string' name='Marital' ordinal='4' />
            <column datatype='real' name='Income' ordinal='5' />
            <column datatype='string' name='Race' ordinal='6' />
            <column datatype='real' name='WaistCirc' ordinal='7' />
            <column datatype='real' name='BMI' ordinal='8' />
            <column datatype='integer' name='Albuminuria' ordinal='9' />
            <column datatype='real' name='UrAlbCr' ordinal='10' />
            <column datatype='real' name='UricAcid' ordinal='11' />
            <column datatype='integer' name='BloodGlucose' ordinal='12' />
            <column datatype='integer' name='HDL' ordinal='13' />
            <column datatype='integer' name='Triglycerides' ordinal='14' />
            <column datatype='integer' name='MetabolicSyndrome' ordinal='15' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.097sybi1m46hho19gvf3z0idnue5' name='df_impute.csv' table='[df_impute#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='seqn' ordinal='1' />
            <column datatype='integer' name='Age' ordinal='2' />
            <column datatype='string' name='Sex' ordinal='3' />
            <column datatype='string' name='Marital' ordinal='4' />
            <column datatype='real' name='Income' ordinal='5' />
            <column datatype='string' name='Race' ordinal='6' />
            <column datatype='real' name='WaistCirc' ordinal='7' />
            <column datatype='real' name='BMI' ordinal='8' />
            <column datatype='integer' name='Albuminuria' ordinal='9' />
            <column datatype='real' name='UrAlbCr' ordinal='10' />
            <column datatype='real' name='UricAcid' ordinal='11' />
            <column datatype='integer' name='BloodGlucose' ordinal='12' />
            <column datatype='integer' name='HDL' ordinal='13' />
            <column datatype='integer' name='Triglycerides' ordinal='14' />
            <column datatype='integer' name='MetabolicSyndrome' ordinal='15' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[df_impute.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[df_impute.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_impute.csv_32C1EEF5744B485D946788DD19D96B98]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seqn</remote-name>
            <remote-type>20</remote-type>
            <local-name>[seqn]</local-name>
            <parent-name>[df_impute.csv]</parent-name>
            <remote-alias>seqn</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_impute.csv_32C1EEF5744B485D946788DD19D96B98]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Age]</local-name>
            <parent-name>[df_impute.csv]</parent-name>
            <remote-alias>Age</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_impute.csv_32C1EEF5744B485D946788DD19D96B98]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sex</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sex]</local-name>
            <parent-name>[df_impute.csv]</parent-name>
            <remote-alias>Sex</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_impute.csv_32C1EEF5744B485D946788DD19D96B98]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Marital</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Marital]</local-name>
            <parent-name>[df_impute.csv]</parent-name>
            <remote-alias>Marital</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_impute.csv_32C1EEF5744B485D946788DD19D96B98]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Income</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Income]</local-name>
            <parent-name>[df_impute.csv]</parent-name>
            <remote-alias>Income</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_impute.csv_32C1EEF5744B485D946788DD19D96B98]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Race</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Race]</local-name>
            <parent-name>[df_impute.csv]</parent-name>
            <remote-alias>Race</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_impute.csv_32C1EEF5744B485D946788DD19D96B98]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WaistCirc</remote-name>
            <remote-type>5</remote-type>
            <local-name>[WaistCirc]</local-name>
            <parent-name>[df_impute.csv]</parent-name>
            <remote-alias>WaistCirc</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_impute.csv_32C1EEF5744B485D946788DD19D96B98]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BMI</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BMI]</local-name>
            <parent-name>[df_impute.csv]</parent-name>
            <remote-alias>BMI</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_impute.csv_32C1EEF5744B485D946788DD19D96B98]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Albuminuria</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Albuminuria]</local-name>
            <parent-name>[df_impute.csv]</parent-name>
            <remote-alias>Albuminuria</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_impute.csv_32C1EEF5744B485D946788DD19D96B98]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UrAlbCr</remote-name>
            <remote-type>5</remote-type>
            <local-name>[UrAlbCr]</local-name>
            <parent-name>[df_impute.csv]</parent-name>
            <remote-alias>UrAlbCr</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_impute.csv_32C1EEF5744B485D946788DD19D96B98]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UricAcid</remote-name>
            <remote-type>5</remote-type>
            <local-name>[UricAcid]</local-name>
            <parent-name>[df_impute.csv]</parent-name>
            <remote-alias>UricAcid</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_impute.csv_32C1EEF5744B485D946788DD19D96B98]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BloodGlucose</remote-name>
            <remote-type>20</remote-type>
            <local-name>[BloodGlucose]</local-name>
            <parent-name>[df_impute.csv]</parent-name>
            <remote-alias>BloodGlucose</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_impute.csv_32C1EEF5744B485D946788DD19D96B98]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HDL</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HDL]</local-name>
            <parent-name>[df_impute.csv]</parent-name>
            <remote-alias>HDL</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_impute.csv_32C1EEF5744B485D946788DD19D96B98]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Triglycerides</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Triglycerides]</local-name>
            <parent-name>[df_impute.csv]</parent-name>
            <remote-alias>Triglycerides</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_impute.csv_32C1EEF5744B485D946788DD19D96B98]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MetabolicSyndrome</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MetabolicSyndrome]</local-name>
            <parent-name>[df_impute.csv]</parent-name>
            <remote-alias>MetabolicSyndrome</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_impute.csv_32C1EEF5744B485D946788DD19D96B98]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Albuminuria]' role='measure' type='quantitative' />
      <column datatype='real' name='[BMI]' role='measure' type='quantitative' />
      <column caption='Blood Glucose' datatype='integer' name='[BloodGlucose]' role='measure' type='quantitative' />
      <column caption='Has Metabolic Syndrome T/F' datatype='boolean' name='[Calculation_1323776833393135616]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [MetabolicSyndrome] == 0&#13;&#10;THEN FALSE&#13;&#10;ELSE TRUE&#13;&#10;END' />
      </column>
      <column caption='Chosen Dimension' datatype='real' name='[Calculation_1323776833394475009]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &apos;Age&apos; THEN [Age]&#13;&#10;WHEN &apos;Income&apos; THEN [Income]&#13;&#10;WHEN &apos;WaistCirc&apos; THEN [WaistCirc]&#13;&#10;WHEN &apos;BMI&apos; THEN [BMI]&#13;&#10;WHEN &apos;Albuminuria&apos; THEN [Albuminuria]&#13;&#10;WHEN &apos;UrAlbCr&apos; THEN [UrAlbCr]&#13;&#10;WHEN &apos;UricAcid&apos; THEN [UricAcid]&#13;&#10;WHEN &apos;BloodGlucose&apos; THEN [BloodGlucose]&#13;&#10;WHEN &apos;HDL&apos; THEN [HDL]&#13;&#10;WHEN &apos;Triglycerides&apos; THEN [Triglycerides]&#13;&#10;END' />
      </column>
      <column caption='Chosen X' datatype='real' name='[Calculation_1323776833406926850]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &apos;Age&apos; THEN [Age]&#13;&#10;WHEN &apos;Income&apos; THEN [Income]&#13;&#10;WHEN &apos;WaistCirc&apos; THEN [WaistCirc]&#13;&#10;WHEN &apos;BMI&apos; THEN [BMI]&#13;&#10;WHEN &apos;Albuminuria&apos; THEN [Albuminuria]&#13;&#10;WHEN &apos;UrAlbCr&apos; THEN [UrAlbCr]&#13;&#10;WHEN &apos;UricAcid&apos; THEN [UricAcid]&#13;&#10;WHEN &apos;BloodGlucose&apos; THEN [BloodGlucose]&#13;&#10;WHEN &apos;HDL&apos; THEN [HDL]&#13;&#10;WHEN &apos;Triglycerides&apos; THEN [Triglycerides]&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[HDL]' role='measure' type='quantitative' />
      <column caption='Metabolic Syndrome' datatype='integer' name='[MetabolicSyndrome]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Triglycerides]' role='measure' type='quantitative' />
      <column caption='Ur Alb Cr' datatype='real' name='[UrAlbCr]' role='measure' type='quantitative' />
      <column caption='Uric Acid' datatype='real' name='[UricAcid]' role='measure' type='quantitative' />
      <column caption='Waist Circ' datatype='real' name='[WaistCirc]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='df_impute.csv' datatype='table' name='[__tableau_internal_object_id__].[df_impute.csv_32C1EEF5744B485D946788DD19D96B98]' role='measure' type='quantitative' />
      <column caption='Seqn' datatype='integer' name='[seqn]' role='measure' type='quantitative' />
      <column-instance column='[Age]' derivation='Sum' name='[sum:Age:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Albuminuria]' derivation='Sum' name='[sum:Albuminuria:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BMI]' derivation='Sum' name='[sum:BMI:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BloodGlucose]' derivation='Sum' name='[sum:BloodGlucose:qk]' pivot='key' type='quantitative' />
      <column-instance column='[HDL]' derivation='Sum' name='[sum:HDL:qk]' pivot='key' type='quantitative' />
      <column-instance column='[MetabolicSyndrome]' derivation='Sum' name='[sum:MetabolicSyndrome:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Triglycerides]' derivation='Sum' name='[sum:Triglycerides:qk]' pivot='key' type='quantitative' />
      <column-instance column='[UrAlbCr]' derivation='Sum' name='[sum:UrAlbCr:qk]' pivot='key' type='quantitative' />
      <column-instance column='[UricAcid]' derivation='Sum' name='[sum:UricAcid:qk]' pivot='key' type='quantitative' />
      <column-instance column='[WaistCirc]' derivation='Sum' name='[sum:WaistCirc:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[sum:BMI:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[sum:Age:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[sum:WaistCirc:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column alias='Blood Glucose' caption='Choose Dimension' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;BloodGlucose&quot;'>
          <calculation class='tableau' formula='&quot;BloodGlucose&quot;' />
          <aliases>
            <alias key='&quot;Age&quot;' value='Age' />
            <alias key='&quot;BloodGlucose&quot;' value='Blood Glucose' />
            <alias key='&quot;UrAlbCr&quot;' value='Albumin Creatinine Ratio (Urine)' />
            <alias key='&quot;UricAcid&quot;' value='Uric Acid' />
            <alias key='&quot;WaistCirc&quot;' value='Waist Circumference' />
          </aliases>
        </column>
        <column alias='Waist Circumference' caption='Choose X' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;WaistCirc&quot;'>
          <calculation class='tableau' formula='&quot;WaistCirc&quot;' />
          <aliases>
            <alias key='&quot;BloodGlucose&quot;' value='Blood Glucose' />
            <alias key='&quot;UrAlbCr&quot;' value='Albumin Creatinine Ratio (Urine)' />
            <alias key='&quot;UricAcid&quot;' value='Uric Acid' />
            <alias key='&quot;WaistCirc&quot;' value='Waist Circumference' />
          </aliases>
        </column>
      </datasource-dependencies>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{0d6892df-39ae-41a2-b3ee-de3f70ed02e9}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[sum:BMI:qk]' />
            <field name='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[sum:BloodGlucose:qk]' />
            <field name='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[sum:HDL:qk]' />
            <field name='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[sum:Triglycerides:qk]' />
            <field name='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[sum:WaistCirc:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>0</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{8be76d59-60d6-45da-9d63-517cc4191a62}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[sum:BMI:qk]' />
            <field name='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[sum:BloodGlucose:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>0</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{8d25a09d-d51c-4712-8592-67622251e64c}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[sum:BMI:qk]' />
            <field name='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[sum:BloodGlucose:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>0</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{e9332a88-41e2-4196-abb0-0ebf10c214ef}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[sum:Age:qk]' />
            <field name='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[sum:Albuminuria:qk]' />
            <field name='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[sum:BMI:qk]' />
            <field name='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[sum:BloodGlucose:qk]' />
            <field name='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[sum:HDL:qk]' />
            <field name='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[sum:MetabolicSyndrome:qk]' />
            <field name='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[sum:Triglycerides:qk]' />
            <field name='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[sum:UrAlbCr:qk]' />
            <field name='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[sum:UricAcid:qk]' />
            <field name='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[sum:WaistCirc:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>0</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields>
          <field name='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[AdhocCluster:4]' />
        </result-fields>
      </analytic-model>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='df_impute.csv' id='df_impute.csv_32C1EEF5744B485D946788DD19D96B98'>
            <properties context=''>
              <relation connection='textscan.097sybi1m46hho19gvf3z0idnue5' name='df_impute.csv' table='[df_impute#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='integer' name='seqn' ordinal='1' />
                  <column datatype='integer' name='Age' ordinal='2' />
                  <column datatype='string' name='Sex' ordinal='3' />
                  <column datatype='string' name='Marital' ordinal='4' />
                  <column datatype='real' name='Income' ordinal='5' />
                  <column datatype='string' name='Race' ordinal='6' />
                  <column datatype='real' name='WaistCirc' ordinal='7' />
                  <column datatype='real' name='BMI' ordinal='8' />
                  <column datatype='integer' name='Albuminuria' ordinal='9' />
                  <column datatype='real' name='UrAlbCr' ordinal='10' />
                  <column datatype='real' name='UricAcid' ordinal='11' />
                  <column datatype='integer' name='BloodGlucose' ordinal='12' />
                  <column datatype='integer' name='HDL' ordinal='13' />
                  <column datatype='integer' name='Triglycerides' ordinal='14' />
                  <column datatype='integer' name='MetabolicSyndrome' ordinal='15' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='%age MS vs Race'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percentage Incidence of Metabolic Syndrome per Race</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_impute' name='federated.0qxsfro1i5vo0q17e8ygw1in8stm' />
          </datasources>
          <datasource-dependencies datasource='federated.0qxsfro1i5vo0q17e8ygw1in8stm'>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column datatype='real' name='[BMI]' role='measure' type='quantitative' />
            <column caption='Blood Glucose' datatype='integer' name='[BloodGlucose]' role='measure' type='quantitative' />
            <column datatype='integer' name='[HDL]' role='measure' type='quantitative' />
            <column datatype='real' name='[Income]' role='measure' type='quantitative' />
            <column caption='Metabolic Syndrome' datatype='integer' name='[MetabolicSyndrome]' role='measure' type='quantitative' />
            <column datatype='string' name='[Race]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Triglycerides]' role='measure' type='quantitative' />
            <column caption='Ur Alb Cr' datatype='real' name='[UrAlbCr]' role='measure' type='quantitative' />
            <column caption='Uric Acid' datatype='real' name='[UricAcid]' role='measure' type='quantitative' />
            <column caption='Waist Circ' datatype='real' name='[WaistCirc]' role='measure' type='quantitative' />
            <column-instance column='[Age]' derivation='Avg' name='[avg:Age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BMI]' derivation='Avg' name='[avg:BMI:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BloodGlucose]' derivation='Avg' name='[avg:BloodGlucose:qk]' pivot='key' type='quantitative' />
            <column-instance column='[HDL]' derivation='Avg' name='[avg:HDL:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Income]' derivation='Avg' name='[avg:Income:qk]' pivot='key' type='quantitative' />
            <column-instance column='[MetabolicSyndrome]' derivation='Avg' name='[avg:MetabolicSyndrome:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Triglycerides]' derivation='Avg' name='[avg:Triglycerides:qk]' pivot='key' type='quantitative' />
            <column-instance column='[UrAlbCr]' derivation='Avg' name='[avg:UrAlbCr:qk]' pivot='key' type='quantitative' />
            <column-instance column='[UricAcid]' derivation='Avg' name='[avg:UricAcid:qk]' pivot='key' type='quantitative' />
            <column-instance column='[WaistCirc]' derivation='Avg' name='[avg:WaistCirc:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Race]' derivation='None' name='[none:Race:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[none:Race:nk]' />
              <tooltip column='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[avg:BMI:qk]' />
              <tooltip column='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[avg:BloodGlucose:qk]' />
              <tooltip column='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[avg:Income:qk]' />
              <tooltip column='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[avg:HDL:qk]' />
              <tooltip column='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[avg:Triglycerides:qk]' />
              <tooltip column='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[avg:UrAlbCr:qk]' />
              <tooltip column='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[avg:UricAcid:qk]' />
              <tooltip column='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[avg:WaistCirc:qk]' />
              <tooltip column='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[avg:Age:qk]' />
              <text column='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[avg:MetabolicSyndrome:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[avg:MetabolicSyndrome:qk]</rows>
        <cols>[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[none:Race:nk]</cols>
      </table>
      <simple-id uuid='{0677B88D-6F8E-48BA-ADD5-769A01F40070}' />
    </worksheet>
    <worksheet name='%age MS vs Race:Marital'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percentage Incidence of Metabolic Syndrome per Race</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_impute' name='federated.0qxsfro1i5vo0q17e8ygw1in8stm' />
          </datasources>
          <datasource-dependencies datasource='federated.0qxsfro1i5vo0q17e8ygw1in8stm'>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column datatype='real' name='[BMI]' role='measure' type='quantitative' />
            <column caption='Blood Glucose' datatype='integer' name='[BloodGlucose]' role='measure' type='quantitative' />
            <column datatype='integer' name='[HDL]' role='measure' type='quantitative' />
            <column datatype='real' name='[Income]' role='measure' type='quantitative' />
            <column datatype='string' name='[Marital]' role='dimension' type='nominal' />
            <column caption='Metabolic Syndrome' datatype='integer' name='[MetabolicSyndrome]' role='measure' type='quantitative' />
            <column datatype='string' name='[Race]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Triglycerides]' role='measure' type='quantitative' />
            <column caption='Ur Alb Cr' datatype='real' name='[UrAlbCr]' role='measure' type='quantitative' />
            <column caption='Uric Acid' datatype='real' name='[UricAcid]' role='measure' type='quantitative' />
            <column caption='Waist Circ' datatype='real' name='[WaistCirc]' role='measure' type='quantitative' />
            <column-instance column='[Age]' derivation='Avg' name='[avg:Age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BMI]' derivation='Avg' name='[avg:BMI:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BloodGlucose]' derivation='Avg' name='[avg:BloodGlucose:qk]' pivot='key' type='quantitative' />
            <column-instance column='[HDL]' derivation='Avg' name='[avg:HDL:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Income]' derivation='Avg' name='[avg:Income:qk]' pivot='key' type='quantitative' />
            <column-instance column='[MetabolicSyndrome]' derivation='Avg' name='[avg:MetabolicSyndrome:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Triglycerides]' derivation='Avg' name='[avg:Triglycerides:qk]' pivot='key' type='quantitative' />
            <column-instance column='[UrAlbCr]' derivation='Avg' name='[avg:UrAlbCr:qk]' pivot='key' type='quantitative' />
            <column-instance column='[UricAcid]' derivation='Avg' name='[avg:UricAcid:qk]' pivot='key' type='quantitative' />
            <column-instance column='[WaistCirc]' derivation='Avg' name='[avg:WaistCirc:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Marital]' derivation='None' name='[none:Marital:nk]' pivot='key' type='nominal' />
            <column-instance column='[Race]' derivation='None' name='[none:Race:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[none:Marital:nk]' />
              <tooltip column='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[avg:BMI:qk]' />
              <tooltip column='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[avg:BloodGlucose:qk]' />
              <tooltip column='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[avg:Income:qk]' />
              <tooltip column='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[avg:HDL:qk]' />
              <tooltip column='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[avg:Triglycerides:qk]' />
              <tooltip column='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[avg:UrAlbCr:qk]' />
              <tooltip column='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[avg:UricAcid:qk]' />
              <tooltip column='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[avg:WaistCirc:qk]' />
              <tooltip column='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[avg:Age:qk]' />
              <text column='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[avg:MetabolicSyndrome:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0qxsfro1i5vo0q17e8ygw1in8stm].[none:Marital:nk] * [federated.0qxsfro1i5vo0q17e8ygw1in8stm].[avg:MetabolicSyndrome:qk])</rows>
        <cols>[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[none:Race:nk]</cols>
      </table>
      <simple-id uuid='{2D4544C3-1D26-4FA3-8537-84419C502344}' />
    </worksheet>
    <worksheet name='%age MS vs Race:Sex'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percentage Incidence of Metabolic Syndrome per Race</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_impute' name='federated.0qxsfro1i5vo0q17e8ygw1in8stm' />
          </datasources>
          <datasource-dependencies datasource='federated.0qxsfro1i5vo0q17e8ygw1in8stm'>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column datatype='real' name='[BMI]' role='measure' type='quantitative' />
            <column caption='Blood Glucose' datatype='integer' name='[BloodGlucose]' role='measure' type='quantitative' />
            <column datatype='integer' name='[HDL]' role='measure' type='quantitative' />
            <column datatype='real' name='[Income]' role='measure' type='quantitative' />
            <column caption='Metabolic Syndrome' datatype='integer' name='[MetabolicSyndrome]' role='measure' type='quantitative' />
            <column datatype='string' name='[Race]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sex]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Triglycerides]' role='measure' type='quantitative' />
            <column caption='Ur Alb Cr' datatype='real' name='[UrAlbCr]' role='measure' type='quantitative' />
            <column caption='Uric Acid' datatype='real' name='[UricAcid]' role='measure' type='quantitative' />
            <column caption='Waist Circ' datatype='real' name='[WaistCirc]' role='measure' type='quantitative' />
            <column-instance column='[Age]' derivation='Avg' name='[avg:Age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BMI]' derivation='Avg' name='[avg:BMI:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BloodGlucose]' derivation='Avg' name='[avg:BloodGlucose:qk]' pivot='key' type='quantitative' />
            <column-instance column='[HDL]' derivation='Avg' name='[avg:HDL:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Income]' derivation='Avg' name='[avg:Income:qk]' pivot='key' type='quantitative' />
            <column-instance column='[MetabolicSyndrome]' derivation='Avg' name='[avg:MetabolicSyndrome:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Triglycerides]' derivation='Avg' name='[avg:Triglycerides:qk]' pivot='key' type='quantitative' />
            <column-instance column='[UrAlbCr]' derivation='Avg' name='[avg:UrAlbCr:qk]' pivot='key' type='quantitative' />
            <column-instance column='[UricAcid]' derivation='Avg' name='[avg:UricAcid:qk]' pivot='key' type='quantitative' />
            <column-instance column='[WaistCirc]' derivation='Avg' name='[avg:WaistCirc:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Race]' derivation='None' name='[none:Race:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[none:Sex:nk]' />
              <tooltip column='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[avg:BMI:qk]' />
              <tooltip column='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[avg:BloodGlucose:qk]' />
              <tooltip column='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[avg:Income:qk]' />
              <tooltip column='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[avg:HDL:qk]' />
              <tooltip column='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[avg:Triglycerides:qk]' />
              <tooltip column='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[avg:UrAlbCr:qk]' />
              <tooltip column='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[avg:UricAcid:qk]' />
              <tooltip column='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[avg:WaistCirc:qk]' />
              <tooltip column='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[avg:Age:qk]' />
              <text column='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[avg:MetabolicSyndrome:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0qxsfro1i5vo0q17e8ygw1in8stm].[none:Sex:nk] * [federated.0qxsfro1i5vo0q17e8ygw1in8stm].[avg:MetabolicSyndrome:qk])</rows>
        <cols>[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[none:Race:nk]</cols>
      </table>
      <simple-id uuid='{8587E14A-7A43-4C01-90B7-03D7DD845D15}' />
    </worksheet>
    <worksheet name='BMI vs. BG Cluster'>
      <table>
        <view>
          <datasources>
            <datasource caption='df_impute' name='federated.0qxsfro1i5vo0q17e8ygw1in8stm' />
          </datasources>
          <datasource-dependencies datasource='federated.0qxsfro1i5vo0q17e8ygw1in8stm'>
            <column auto-hidden='true' caption='Clusters' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:1]' parent-model='[AnalyticModel:{8be76d59-60d6-45da-9d63-517cc4191a62}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column datatype='real' name='[BMI]' role='measure' type='quantitative' />
            <column caption='Blood Glucose' datatype='integer' name='[BloodGlucose]' role='measure' type='quantitative' />
            <column-instance column='[AdhocCluster:1]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[BMI]' derivation='Sum' name='[sum:BMI:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BloodGlucose]' derivation='Sum' name='[sum:BloodGlucose:qk]' pivot='key' type='quantitative' />
            <style />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[none:AdhocCluster:1:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[sum:BMI:qk]</rows>
        <cols>[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[sum:BloodGlucose:qk]</cols>
      </table>
      <simple-id uuid='{7980DD80-E02D-4296-A5CD-447E925C0DD3}' />
    </worksheet>
    <worksheet name='Dimensions Cluster'>
      <table>
        <view>
          <datasources>
            <datasource caption='df_impute' name='federated.0qxsfro1i5vo0q17e8ygw1in8stm' />
          </datasources>
          <datasource-dependencies datasource='federated.0qxsfro1i5vo0q17e8ygw1in8stm'>
            <column auto-hidden='true' caption='Clusters (2)' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:3]' parent-model='[AnalyticModel:{0d6892df-39ae-41a2-b3ee-de3f70ed02e9}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column datatype='real' name='[BMI]' role='measure' type='quantitative' />
            <column caption='Blood Glucose' datatype='integer' name='[BloodGlucose]' role='measure' type='quantitative' />
            <column datatype='integer' name='[HDL]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Triglycerides]' role='measure' type='quantitative' />
            <column caption='Waist Circ' datatype='real' name='[WaistCirc]' role='measure' type='quantitative' />
            <column-instance column='[AdhocCluster:3]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:3:ok]' pivot='key' type='ordinal' />
            <column-instance column='[BMI]' derivation='Sum' name='[sum:BMI:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BloodGlucose]' derivation='Sum' name='[sum:BloodGlucose:qk]' pivot='key' type='quantitative' />
            <column-instance column='[HDL]' derivation='Sum' name='[sum:HDL:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Triglycerides]' derivation='Sum' name='[sum:Triglycerides:qk]' pivot='key' type='quantitative' />
            <column-instance column='[WaistCirc]' derivation='Sum' name='[sum:WaistCirc:qk]' pivot='key' type='quantitative' />
            <style />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[none:AdhocCluster:3:ok]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[sum:BloodGlucose:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[none:AdhocCluster:3:ok]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[sum:Triglycerides:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[none:AdhocCluster:3:ok]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[sum:WaistCirc:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[none:AdhocCluster:3:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0qxsfro1i5vo0q17e8ygw1in8stm].[sum:BMI:qk] + [federated.0qxsfro1i5vo0q17e8ygw1in8stm].[sum:HDL:qk])</rows>
        <cols>([federated.0qxsfro1i5vo0q17e8ygw1in8stm].[sum:BloodGlucose:qk] + ([federated.0qxsfro1i5vo0q17e8ygw1in8stm].[sum:Triglycerides:qk] + [federated.0qxsfro1i5vo0q17e8ygw1in8stm].[sum:WaistCirc:qk]))</cols>
      </table>
      <simple-id uuid='{FF41A3F2-6D14-44DE-AFAA-0B821697F3CA}' />
    </worksheet>
    <worksheet name='Dimensions vs. MS'>
      <layout-options>
        <title>
          <formatted-text>
            <run>(Significant Differences in) Average </run>
            <run bold='true' fontcolor='#4e79a7'>&lt;[Parameters].[Parameter 1]&gt;</run>
            <run> When Has Metabolic Syndrome True / False</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_impute' name='federated.0qxsfro1i5vo0q17e8ygw1in8stm' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Blood Glucose' caption='Choose Dimension' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;BloodGlucose&quot;'>
              <calculation class='tableau' formula='&quot;BloodGlucose&quot;' />
              <aliases>
                <alias key='&quot;Age&quot;' value='Age' />
                <alias key='&quot;BloodGlucose&quot;' value='Blood Glucose' />
                <alias key='&quot;UrAlbCr&quot;' value='Albumin Creatinine Ratio (Urine)' />
                <alias key='&quot;UricAcid&quot;' value='Uric Acid' />
                <alias key='&quot;WaistCirc&quot;' value='Waist Circumference' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0qxsfro1i5vo0q17e8ygw1in8stm'>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Albuminuria]' role='measure' type='quantitative' />
            <column datatype='real' name='[BMI]' role='measure' type='quantitative' />
            <column caption='Blood Glucose' datatype='integer' name='[BloodGlucose]' role='measure' type='quantitative' />
            <column caption='Has Metabolic Syndrome T/F' datatype='boolean' name='[Calculation_1323776833393135616]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [MetabolicSyndrome] == 0&#13;&#10;THEN FALSE&#13;&#10;ELSE TRUE&#13;&#10;END' />
            </column>
            <column caption='Chosen Dimension' datatype='real' name='[Calculation_1323776833394475009]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &apos;Age&apos; THEN [Age]&#13;&#10;WHEN &apos;Income&apos; THEN [Income]&#13;&#10;WHEN &apos;WaistCirc&apos; THEN [WaistCirc]&#13;&#10;WHEN &apos;BMI&apos; THEN [BMI]&#13;&#10;WHEN &apos;Albuminuria&apos; THEN [Albuminuria]&#13;&#10;WHEN &apos;UrAlbCr&apos; THEN [UrAlbCr]&#13;&#10;WHEN &apos;UricAcid&apos; THEN [UricAcid]&#13;&#10;WHEN &apos;BloodGlucose&apos; THEN [BloodGlucose]&#13;&#10;WHEN &apos;HDL&apos; THEN [HDL]&#13;&#10;WHEN &apos;Triglycerides&apos; THEN [Triglycerides]&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[HDL]' role='measure' type='quantitative' />
            <column datatype='real' name='[Income]' role='measure' type='quantitative' />
            <column caption='Metabolic Syndrome' datatype='integer' name='[MetabolicSyndrome]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Triglycerides]' role='measure' type='quantitative' />
            <column caption='Ur Alb Cr' datatype='real' name='[UrAlbCr]' role='measure' type='quantitative' />
            <column caption='Uric Acid' datatype='real' name='[UricAcid]' role='measure' type='quantitative' />
            <column caption='Waist Circ' datatype='real' name='[WaistCirc]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1323776833394475009]' derivation='Avg' name='[avg:Calculation_1323776833394475009:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1323776833393135616]' derivation='None' name='[none:Calculation_1323776833393135616:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[avg:Calculation_1323776833394475009:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='font-style' value='normal' />
            <format attr='font-weight' value='normal' />
            <format attr='text-orientation' value='0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[avg:Calculation_1323776833394475009:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([Parameters].[Parameter 1] * [federated.0qxsfro1i5vo0q17e8ygw1in8stm].[avg:Calculation_1323776833394475009:qk])</rows>
        <cols>[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[none:Calculation_1323776833393135616:nk]</cols>
      </table>
      <simple-id uuid='{8F649B57-290F-42E2-B6D7-78F22EE01194}' />
    </worksheet>
    <worksheet name='Dimensions vs. MS:Marital'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average </run>
            <run bold='true' fontcolor='#4e79a7'>&lt;[Parameters].[Parameter 1]&gt;</run>
            <run> When Has Metabolic Syndrome True / False Split by Marital Status</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_impute' name='federated.0qxsfro1i5vo0q17e8ygw1in8stm' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Blood Glucose' caption='Choose Dimension' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;BloodGlucose&quot;'>
              <calculation class='tableau' formula='&quot;BloodGlucose&quot;' />
              <aliases>
                <alias key='&quot;Age&quot;' value='Age' />
                <alias key='&quot;BloodGlucose&quot;' value='Blood Glucose' />
                <alias key='&quot;UrAlbCr&quot;' value='Albumin Creatinine Ratio (Urine)' />
                <alias key='&quot;UricAcid&quot;' value='Uric Acid' />
                <alias key='&quot;WaistCirc&quot;' value='Waist Circumference' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0qxsfro1i5vo0q17e8ygw1in8stm'>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Albuminuria]' role='measure' type='quantitative' />
            <column datatype='real' name='[BMI]' role='measure' type='quantitative' />
            <column caption='Blood Glucose' datatype='integer' name='[BloodGlucose]' role='measure' type='quantitative' />
            <column caption='Has Metabolic Syndrome T/F' datatype='boolean' name='[Calculation_1323776833393135616]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [MetabolicSyndrome] == 0&#13;&#10;THEN FALSE&#13;&#10;ELSE TRUE&#13;&#10;END' />
            </column>
            <column caption='Chosen Dimension' datatype='real' name='[Calculation_1323776833394475009]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &apos;Age&apos; THEN [Age]&#13;&#10;WHEN &apos;Income&apos; THEN [Income]&#13;&#10;WHEN &apos;WaistCirc&apos; THEN [WaistCirc]&#13;&#10;WHEN &apos;BMI&apos; THEN [BMI]&#13;&#10;WHEN &apos;Albuminuria&apos; THEN [Albuminuria]&#13;&#10;WHEN &apos;UrAlbCr&apos; THEN [UrAlbCr]&#13;&#10;WHEN &apos;UricAcid&apos; THEN [UricAcid]&#13;&#10;WHEN &apos;BloodGlucose&apos; THEN [BloodGlucose]&#13;&#10;WHEN &apos;HDL&apos; THEN [HDL]&#13;&#10;WHEN &apos;Triglycerides&apos; THEN [Triglycerides]&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[HDL]' role='measure' type='quantitative' />
            <column datatype='real' name='[Income]' role='measure' type='quantitative' />
            <column datatype='string' name='[Marital]' role='dimension' type='nominal' />
            <column caption='Metabolic Syndrome' datatype='integer' name='[MetabolicSyndrome]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Triglycerides]' role='measure' type='quantitative' />
            <column caption='Ur Alb Cr' datatype='real' name='[UrAlbCr]' role='measure' type='quantitative' />
            <column caption='Uric Acid' datatype='real' name='[UricAcid]' role='measure' type='quantitative' />
            <column caption='Waist Circ' datatype='real' name='[WaistCirc]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1323776833394475009]' derivation='Avg' name='[avg:Calculation_1323776833394475009:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1323776833393135616]' derivation='None' name='[none:Calculation_1323776833393135616:nk]' pivot='key' type='nominal' />
            <column-instance column='[Marital]' derivation='None' name='[none:Marital:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[avg:Calculation_1323776833394475009:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='font-style' value='normal' />
            <format attr='font-weight' value='normal' />
            <format attr='text-orientation' value='0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[none:Marital:nk]' />
              <text column='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[avg:Calculation_1323776833394475009:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([Parameters].[Parameter 1] * [federated.0qxsfro1i5vo0q17e8ygw1in8stm].[avg:Calculation_1323776833394475009:qk])</rows>
        <cols>([federated.0qxsfro1i5vo0q17e8ygw1in8stm].[none:Calculation_1323776833393135616:nk] / [federated.0qxsfro1i5vo0q17e8ygw1in8stm].[none:Marital:nk])</cols>
      </table>
      <simple-id uuid='{F09B13A4-F093-4433-8D35-5C496B7F249B}' />
    </worksheet>
    <worksheet name='Dimensions vs. MS:Race'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average </run>
            <run bold='true' fontcolor='#4e79a7'>&lt;[Parameters].[Parameter 1]&gt;</run>
            <run> When Has Metabolic Syndrome True / False Split by Race</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_impute' name='federated.0qxsfro1i5vo0q17e8ygw1in8stm' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Blood Glucose' caption='Choose Dimension' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;BloodGlucose&quot;'>
              <calculation class='tableau' formula='&quot;BloodGlucose&quot;' />
              <aliases>
                <alias key='&quot;Age&quot;' value='Age' />
                <alias key='&quot;BloodGlucose&quot;' value='Blood Glucose' />
                <alias key='&quot;UrAlbCr&quot;' value='Albumin Creatinine Ratio (Urine)' />
                <alias key='&quot;UricAcid&quot;' value='Uric Acid' />
                <alias key='&quot;WaistCirc&quot;' value='Waist Circumference' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0qxsfro1i5vo0q17e8ygw1in8stm'>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Albuminuria]' role='measure' type='quantitative' />
            <column datatype='real' name='[BMI]' role='measure' type='quantitative' />
            <column caption='Blood Glucose' datatype='integer' name='[BloodGlucose]' role='measure' type='quantitative' />
            <column caption='Has Metabolic Syndrome T/F' datatype='boolean' name='[Calculation_1323776833393135616]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [MetabolicSyndrome] == 0&#13;&#10;THEN FALSE&#13;&#10;ELSE TRUE&#13;&#10;END' />
            </column>
            <column caption='Chosen Dimension' datatype='real' name='[Calculation_1323776833394475009]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &apos;Age&apos; THEN [Age]&#13;&#10;WHEN &apos;Income&apos; THEN [Income]&#13;&#10;WHEN &apos;WaistCirc&apos; THEN [WaistCirc]&#13;&#10;WHEN &apos;BMI&apos; THEN [BMI]&#13;&#10;WHEN &apos;Albuminuria&apos; THEN [Albuminuria]&#13;&#10;WHEN &apos;UrAlbCr&apos; THEN [UrAlbCr]&#13;&#10;WHEN &apos;UricAcid&apos; THEN [UricAcid]&#13;&#10;WHEN &apos;BloodGlucose&apos; THEN [BloodGlucose]&#13;&#10;WHEN &apos;HDL&apos; THEN [HDL]&#13;&#10;WHEN &apos;Triglycerides&apos; THEN [Triglycerides]&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[HDL]' role='measure' type='quantitative' />
            <column datatype='real' name='[Income]' role='measure' type='quantitative' />
            <column caption='Metabolic Syndrome' datatype='integer' name='[MetabolicSyndrome]' role='measure' type='quantitative' />
            <column datatype='string' name='[Race]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Triglycerides]' role='measure' type='quantitative' />
            <column caption='Ur Alb Cr' datatype='real' name='[UrAlbCr]' role='measure' type='quantitative' />
            <column caption='Uric Acid' datatype='real' name='[UricAcid]' role='measure' type='quantitative' />
            <column caption='Waist Circ' datatype='real' name='[WaistCirc]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1323776833394475009]' derivation='Avg' name='[avg:Calculation_1323776833394475009:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1323776833393135616]' derivation='None' name='[none:Calculation_1323776833393135616:nk]' pivot='key' type='nominal' />
            <column-instance column='[Race]' derivation='None' name='[none:Race:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[avg:Calculation_1323776833394475009:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='font-style' value='normal' />
            <format attr='font-weight' value='normal' />
            <format attr='text-orientation' value='0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[none:Race:nk]' />
              <text column='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[avg:Calculation_1323776833394475009:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([Parameters].[Parameter 1] * [federated.0qxsfro1i5vo0q17e8ygw1in8stm].[avg:Calculation_1323776833394475009:qk])</rows>
        <cols>([federated.0qxsfro1i5vo0q17e8ygw1in8stm].[none:Calculation_1323776833393135616:nk] / [federated.0qxsfro1i5vo0q17e8ygw1in8stm].[none:Race:nk])</cols>
      </table>
      <simple-id uuid='{3EECB3F2-3861-479C-8B14-23A14079277D}' />
    </worksheet>
    <worksheet name='Dimensions vs. MS:Sex'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average </run>
            <run bold='true' fontcolor='#4e79a7'>&lt;[Parameters].[Parameter 1]&gt;</run>
            <run> When Has Metabolic Syndrome True / False Split by Sex</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_impute' name='federated.0qxsfro1i5vo0q17e8ygw1in8stm' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Blood Glucose' caption='Choose Dimension' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;BloodGlucose&quot;'>
              <calculation class='tableau' formula='&quot;BloodGlucose&quot;' />
              <aliases>
                <alias key='&quot;Age&quot;' value='Age' />
                <alias key='&quot;BloodGlucose&quot;' value='Blood Glucose' />
                <alias key='&quot;UrAlbCr&quot;' value='Albumin Creatinine Ratio (Urine)' />
                <alias key='&quot;UricAcid&quot;' value='Uric Acid' />
                <alias key='&quot;WaistCirc&quot;' value='Waist Circumference' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0qxsfro1i5vo0q17e8ygw1in8stm'>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Albuminuria]' role='measure' type='quantitative' />
            <column datatype='real' name='[BMI]' role='measure' type='quantitative' />
            <column caption='Blood Glucose' datatype='integer' name='[BloodGlucose]' role='measure' type='quantitative' />
            <column caption='Has Metabolic Syndrome T/F' datatype='boolean' name='[Calculation_1323776833393135616]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [MetabolicSyndrome] == 0&#13;&#10;THEN FALSE&#13;&#10;ELSE TRUE&#13;&#10;END' />
            </column>
            <column caption='Chosen Dimension' datatype='real' name='[Calculation_1323776833394475009]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &apos;Age&apos; THEN [Age]&#13;&#10;WHEN &apos;Income&apos; THEN [Income]&#13;&#10;WHEN &apos;WaistCirc&apos; THEN [WaistCirc]&#13;&#10;WHEN &apos;BMI&apos; THEN [BMI]&#13;&#10;WHEN &apos;Albuminuria&apos; THEN [Albuminuria]&#13;&#10;WHEN &apos;UrAlbCr&apos; THEN [UrAlbCr]&#13;&#10;WHEN &apos;UricAcid&apos; THEN [UricAcid]&#13;&#10;WHEN &apos;BloodGlucose&apos; THEN [BloodGlucose]&#13;&#10;WHEN &apos;HDL&apos; THEN [HDL]&#13;&#10;WHEN &apos;Triglycerides&apos; THEN [Triglycerides]&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[HDL]' role='measure' type='quantitative' />
            <column datatype='real' name='[Income]' role='measure' type='quantitative' />
            <column caption='Metabolic Syndrome' datatype='integer' name='[MetabolicSyndrome]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sex]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Triglycerides]' role='measure' type='quantitative' />
            <column caption='Ur Alb Cr' datatype='real' name='[UrAlbCr]' role='measure' type='quantitative' />
            <column caption='Uric Acid' datatype='real' name='[UricAcid]' role='measure' type='quantitative' />
            <column caption='Waist Circ' datatype='real' name='[WaistCirc]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1323776833394475009]' derivation='Avg' name='[avg:Calculation_1323776833394475009:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1323776833393135616]' derivation='None' name='[none:Calculation_1323776833393135616:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[avg:Calculation_1323776833394475009:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='font-style' value='normal' />
            <format attr='font-weight' value='normal' />
            <format attr='text-orientation' value='0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[none:Sex:nk]' />
              <text column='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[avg:Calculation_1323776833394475009:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([Parameters].[Parameter 1] * [federated.0qxsfro1i5vo0q17e8ygw1in8stm].[avg:Calculation_1323776833394475009:qk])</rows>
        <cols>([federated.0qxsfro1i5vo0q17e8ygw1in8stm].[none:Calculation_1323776833393135616:nk] / [federated.0qxsfro1i5vo0q17e8ygw1in8stm].[none:Sex:nk])</cols>
      </table>
      <simple-id uuid='{280A0DD4-3F3D-4750-8844-EE44AAF4AFC8}' />
    </worksheet>
    <worksheet name='UserChosen Scatter'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Scatterplot of </run>
            <run bold='true' fontcolor='#4e79a7'>&lt;[Parameters].[Parameter 1]&gt;</run>
            <run> vs. </run>
            <run bold='true' fontcolor='#4e79a7'>&lt;[Parameters].[Parameter 2]&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_impute' name='federated.0qxsfro1i5vo0q17e8ygw1in8stm' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Blood Glucose' caption='Choose Dimension' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;BloodGlucose&quot;'>
              <calculation class='tableau' formula='&quot;BloodGlucose&quot;' />
              <aliases>
                <alias key='&quot;Age&quot;' value='Age' />
                <alias key='&quot;BloodGlucose&quot;' value='Blood Glucose' />
                <alias key='&quot;UrAlbCr&quot;' value='Albumin Creatinine Ratio (Urine)' />
                <alias key='&quot;UricAcid&quot;' value='Uric Acid' />
                <alias key='&quot;WaistCirc&quot;' value='Waist Circumference' />
              </aliases>
            </column>
            <column alias='Waist Circumference' caption='Choose X' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;WaistCirc&quot;'>
              <calculation class='tableau' formula='&quot;WaistCirc&quot;' />
              <aliases>
                <alias key='&quot;BloodGlucose&quot;' value='Blood Glucose' />
                <alias key='&quot;UrAlbCr&quot;' value='Albumin Creatinine Ratio (Urine)' />
                <alias key='&quot;UricAcid&quot;' value='Uric Acid' />
                <alias key='&quot;WaistCirc&quot;' value='Waist Circumference' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0qxsfro1i5vo0q17e8ygw1in8stm'>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Albuminuria]' role='measure' type='quantitative' />
            <column datatype='real' name='[BMI]' role='measure' type='quantitative' />
            <column caption='Blood Glucose' datatype='integer' name='[BloodGlucose]' role='measure' type='quantitative' />
            <column caption='Chosen Dimension' datatype='real' name='[Calculation_1323776833394475009]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &apos;Age&apos; THEN [Age]&#13;&#10;WHEN &apos;Income&apos; THEN [Income]&#13;&#10;WHEN &apos;WaistCirc&apos; THEN [WaistCirc]&#13;&#10;WHEN &apos;BMI&apos; THEN [BMI]&#13;&#10;WHEN &apos;Albuminuria&apos; THEN [Albuminuria]&#13;&#10;WHEN &apos;UrAlbCr&apos; THEN [UrAlbCr]&#13;&#10;WHEN &apos;UricAcid&apos; THEN [UricAcid]&#13;&#10;WHEN &apos;BloodGlucose&apos; THEN [BloodGlucose]&#13;&#10;WHEN &apos;HDL&apos; THEN [HDL]&#13;&#10;WHEN &apos;Triglycerides&apos; THEN [Triglycerides]&#13;&#10;END' />
            </column>
            <column caption='Chosen X' datatype='real' name='[Calculation_1323776833406926850]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &apos;Age&apos; THEN [Age]&#13;&#10;WHEN &apos;Income&apos; THEN [Income]&#13;&#10;WHEN &apos;WaistCirc&apos; THEN [WaistCirc]&#13;&#10;WHEN &apos;BMI&apos; THEN [BMI]&#13;&#10;WHEN &apos;Albuminuria&apos; THEN [Albuminuria]&#13;&#10;WHEN &apos;UrAlbCr&apos; THEN [UrAlbCr]&#13;&#10;WHEN &apos;UricAcid&apos; THEN [UricAcid]&#13;&#10;WHEN &apos;BloodGlucose&apos; THEN [BloodGlucose]&#13;&#10;WHEN &apos;HDL&apos; THEN [HDL]&#13;&#10;WHEN &apos;Triglycerides&apos; THEN [Triglycerides]&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[HDL]' role='measure' type='quantitative' />
            <column datatype='real' name='[Income]' role='measure' type='quantitative' />
            <column datatype='string' name='[Marital]' role='dimension' type='nominal' />
            <column datatype='string' name='[Race]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sex]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Triglycerides]' role='measure' type='quantitative' />
            <column caption='Ur Alb Cr' datatype='real' name='[UrAlbCr]' role='measure' type='quantitative' />
            <column caption='Uric Acid' datatype='real' name='[UricAcid]' role='measure' type='quantitative' />
            <column caption='Waist Circ' datatype='real' name='[WaistCirc]' role='measure' type='quantitative' />
            <column-instance column='[Marital]' derivation='Attribute' name='[attr:Marital:nk]' pivot='key' type='nominal' />
            <column-instance column='[Race]' derivation='Attribute' name='[attr:Race:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex]' derivation='Attribute' name='[attr:Sex:nk]' pivot='key' type='nominal' />
            <column-instance column='[Race]' derivation='None' name='[none:Race:nk]' pivot='key' type='nominal' />
            <column-instance column='[BMI]' derivation='Sum' name='[sum:BMI:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1323776833394475009]' derivation='Sum' name='[sum:Calculation_1323776833394475009:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1323776833406926850]' derivation='Sum' name='[sum:Calculation_1323776833406926850:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[sum:BMI:qk]&quot;' user:op='manual' />
          </filter>
          <slices>
            <column>[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[:Measure Names]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[sum:Calculation_1323776833394475009:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[Parameters].[Parameter 1]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='title' field='[Parameters].[Parameter 1]' value='Choose Dimension (Y)'>
              <formatted-text>
                <run>Choose Dimension (Y)</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[none:Race:nk]' />
              <tooltip column='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[attr:Race:nk]' />
              <tooltip column='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[attr:Sex:nk]' />
              <tooltip column='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[attr:Marital:nk]' />
              <tooltip column='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[sum:Calculation_1323776833394475009:qk]' />
              <tooltip column='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[sum:Calculation_1323776833406926850:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([Parameters].[Parameter 1] * [federated.0qxsfro1i5vo0q17e8ygw1in8stm].[sum:Calculation_1323776833394475009:qk])</rows>
        <cols>([Parameters].[Parameter 2] * [federated.0qxsfro1i5vo0q17e8ygw1in8stm].[sum:Calculation_1323776833406926850:qk])</cols>
      </table>
      <simple-id uuid='{3BD28888-40A3-4502-85D8-8BC0300134E7}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Dimensions vs. MS'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[none:Calculation_1323776833393135616:nk]</field>
            <field>[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[none:Sex:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BE1B019C-AC4A-4634-BFDC-C743768CAB62}' />
    </window>
    <window class='worksheet' name='Dimensions vs. MS:Sex'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='2' param='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[none:Sex:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[none:Calculation_1323776833393135616:nk]</field>
            <field>[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[none:Race:nk]</field>
            <field>[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[none:Sex:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{33517859-C3CF-47A0-ABCF-B65F25F1D3EF}' />
    </window>
    <window class='worksheet' maximized='true' name='Dimensions vs. MS:Race'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='2' param='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[none:Race:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[none:Calculation_1323776833393135616:nk]</field>
            <field>[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[none:Race:nk]</field>
            <field>[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[none:Sex:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{38BB7730-ACB0-4FB2-9441-5625566A78D9}' />
    </window>
    <window class='worksheet' name='Dimensions vs. MS:Marital'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='2' param='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[none:Marital:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[none:Calculation_1323776833393135616:nk]</field>
            <field>[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[none:Marital:nk]</field>
            <field>[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[none:Race:nk]</field>
            <field>[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[none:Sex:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5A6D0D79-6134-4E0B-B1C8-E769D12A2A35}' />
    </window>
    <window class='worksheet' name='%age MS vs Race'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[none:Race:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[none:Race:nk]</field>
            <field>[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[none:Sex:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{4042D275-3964-47B0-8EC3-4809A6F08A2A}' />
    </window>
    <window class='worksheet' name='%age MS vs Race:Sex'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[none:Sex:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[none:Race:nk]</field>
            <field>[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[none:Sex:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{27026BC1-F3DE-41AC-A42A-8B14A44403F8}' />
    </window>
    <window class='worksheet' name='%age MS vs Race:Marital'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[none:Marital:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[none:Marital:nk]</field>
            <field>[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[none:Race:nk]</field>
            <field>[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[none:Sex:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{4FD13C3A-9F80-44CF-9BF7-FBFE0D8591C0}' />
    </window>
    <window class='worksheet' name='UserChosen Scatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card custom-title='true' mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card pane-specification-id='7' param='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[none:Race:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[Parameters].[Parameter 2]</field>
            <field>[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[:Measure Names]</field>
            <field>[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[none:Marital:nk]</field>
            <field>[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[none:Race:nk]</field>
            <field>[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[none:Sex:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{91BB8DE7-0789-4AD2-9015-160C38F3E514}' />
    </window>
    <window class='worksheet' name='BMI vs. BG Cluster'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[none:AdhocCluster:1:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[none:AdhocCluster:1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9C9F9023-C783-414D-8BDC-27D86CED96AE}' />
    </window>
    <window class='worksheet' name='Dimensions Cluster'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[none:AdhocCluster:3:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[none:AdhocCluster:1:ok]</field>
            <field>[federated.0qxsfro1i5vo0q17e8ygw1in8stm].[none:AdhocCluster:3:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{844B8E28-19FC-4944-A0E4-B37E0F9808A5}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='%age MS vs Race' width='192'>
      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
      06T4VQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='%age MS vs Race:Marital' width='192'>
      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
      aaTcoAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='%age MS vs Race:Sex' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='BMI vs. BG Cluster' width='192'>
      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
      o2zH/wF8B05baEdi+wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dimensions Cluster' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dimensions vs. MS' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dimensions vs. MS:Marital' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dimensions vs. MS:Race' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dimensions vs. MS:Sex' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='UserChosen Scatter' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
